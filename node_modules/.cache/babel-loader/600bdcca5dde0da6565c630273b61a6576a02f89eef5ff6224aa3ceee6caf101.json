{"ast":null,"code":"var _jsxFileName = \"/Users/shobithacherian/Projects/mpcs52553/hw5-Suzzat9/space/src/EventLoc.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EventLoc extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n}\nfunction getEventmap(data) {\n  const latitude = data[0];\n  const longitude = data[1];\n  const new_src = \"https://maps.googleapis.com/maps/api/staticmap?center=\" + latitude + \",\" + longitude + \"&zoom=50&size=600x400&maptype=terrain&key=AIzaSyB-oQnkpiDtJiV7YX05PQxmHJviThfoa3o\";\n}\nrender = () => {\n  if (this.props.coordinates) {\n    getEventmap(this.props.coordinates);\n    // TO DO #5: Display the actual details of the selected station\n    //           instead of the placeholder text you see below. - DONE\n    // <img src={asteroid_pic} width={100} height={125} alt=\"Ast_pic\" />\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: new_src,\n      alt: \"event_loc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n};\nexport default EventLoc;","map":{"version":3,"names":["React","EventLoc","Component","constructor","props","getEventmap","data","latitude","longitude","new_src","render","coordinates"],"sources":["/Users/shobithacherian/Projects/mpcs52553/hw5-Suzzat9/space/src/EventLoc.js"],"sourcesContent":["import React from 'react';\n\nclass EventLoc extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n}\n\nfunction getEventmap(data) {\n    const latitude = data[0]\n    const longitude = data[1]\n    const new_src = \"https://maps.googleapis.com/maps/api/staticmap?center=\" + latitude + \",\" + longitude + \"&zoom=50&size=600x400&maptype=terrain&key=AIzaSyB-oQnkpiDtJiV7YX05PQxmHJviThfoa3o\"\n\n}\n\nrender = () => {\n    if (this.props.coordinates) {\n        getEventmap(this.props.coordinates)\n        // TO DO #5: Display the actual details of the selected station\n        //           instead of the placeholder text you see below. - DONE\n        // <img src={asteroid_pic} width={100} height={125} alt=\"Ast_pic\" />\n        return (\n            <img src={new_src} alt=\"event_loc\" />\n        )\n    } else {\n        return (\n            <div className=\"col-sm-4\">\n            </div >\n        )\n    }\n}\n\n\nexport default EventLoc;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,QAAQ,SAASD,KAAK,CAACE,SAAS,CAAC;EAEnCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;EAChB;AACJ;AAEA,SAASC,WAAW,CAACC,IAAI,EAAE;EACvB,MAAMC,QAAQ,GAAGD,IAAI,CAAC,CAAC,CAAC;EACxB,MAAME,SAAS,GAAGF,IAAI,CAAC,CAAC,CAAC;EACzB,MAAMG,OAAO,GAAG,wDAAwD,GAAGF,QAAQ,GAAG,GAAG,GAAGC,SAAS,GAAG,mFAAmF;AAE/L;AAEAE,MAAM,GAAG,MAAM;EACX,IAAI,IAAI,CAACN,KAAK,CAACO,WAAW,EAAE;IACxBN,WAAW,CAAC,IAAI,CAACD,KAAK,CAACO,WAAW,CAAC;IACnC;IACA;IACA;IACA,oBACI;MAAK,GAAG,EAAEF,OAAQ;MAAC,GAAG,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG;EAE7C,CAAC,MAAM;IACH,oBACI;MAAK,SAAS,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAClB;EAEf;AACJ,CAAC;AAGD,eAAeR,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}